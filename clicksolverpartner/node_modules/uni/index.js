'use strict';

var arg = process.argv.slice(2)
  , fuse = require('fusing')
  , argh = require('argh')
  , fs = require('fs');

/**
 * An universal integration of GitHub, Git, Node and npm.
 *
 * @constructor
 * @public
 */
function Uni() {

}

fuse(Uni, require('eventemitter3'));

/**
 * The command that needs to be executed.
 *
 * @type {String}
 * @public
 */
Uni.readable('command', arg.length ? arg.shift() : 'create');

/**
 * The command line flags for our given commands.
 *
 * @type {Object}
 * @public
 */
Uni.readable('flag', argh(arg));

/**
 * The different commands that are supported by our command line interface.
 * These are also automatically exposed as API methods
 *
 * @type {Array}
 * @public
 */
Uni.readable('commands', fs.readdirSync('command').filter(function filter(folder) {
  return fs.fstatSync('command/'+ folder).isDir();
}).map(function map(folder) {
  var Command = require('./command/'+ folder)
    , name = folder.toLowerCase();

  //
  // Also introduce these commands as API methods directly on to the Uni
  // prototype so we can also use it as programmable API.
  //
  Uni.readable(name, function factory() {
    var command = new Command(this);

    return command.run();
  });

  return name;
}));

/**
 * Expose our Command class.
 *
 * @constructor
 * @type {Function}
 * @public
 */
Uni.Command = require('./command');

//
// Expose the module.
//
module.exports = Uni;
