/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateStateH.js
 */
#pragma once

#ifdef ANDROID
#include <folly/dynamic.h>
#include <react/renderer/mapbuffer/MapBuffer.h>
#include <react/renderer/mapbuffer/MapBufferBuilder.h>
#endif

namespace facebook::react {

class RNMBXAtmosphereState {
public:
  RNMBXAtmosphereState() = default;

#ifdef ANDROID
  RNMBXAtmosphereState(RNMBXAtmosphereState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXBackgroundLayerState {
public:
  RNMBXBackgroundLayerState() = default;

#ifdef ANDROID
  RNMBXBackgroundLayerState(RNMBXBackgroundLayerState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXCalloutState {
public:
  RNMBXCalloutState() = default;

#ifdef ANDROID
  RNMBXCalloutState(RNMBXCalloutState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXCameraState {
public:
  RNMBXCameraState() = default;

#ifdef ANDROID
  RNMBXCameraState(RNMBXCameraState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXCircleLayerState {
public:
  RNMBXCircleLayerState() = default;

#ifdef ANDROID
  RNMBXCircleLayerState(RNMBXCircleLayerState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXCustomLocationProviderState {
public:
  RNMBXCustomLocationProviderState() = default;

#ifdef ANDROID
  RNMBXCustomLocationProviderState(RNMBXCustomLocationProviderState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXFillExtrusionLayerState {
public:
  RNMBXFillExtrusionLayerState() = default;

#ifdef ANDROID
  RNMBXFillExtrusionLayerState(RNMBXFillExtrusionLayerState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXFillLayerState {
public:
  RNMBXFillLayerState() = default;

#ifdef ANDROID
  RNMBXFillLayerState(RNMBXFillLayerState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXHeatmapLayerState {
public:
  RNMBXHeatmapLayerState() = default;

#ifdef ANDROID
  RNMBXHeatmapLayerState(RNMBXHeatmapLayerState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXImageState {
public:
  RNMBXImageState() = default;

#ifdef ANDROID
  RNMBXImageState(RNMBXImageState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXImagesState {
public:
  RNMBXImagesState() = default;

#ifdef ANDROID
  RNMBXImagesState(RNMBXImagesState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXImageSourceState {
public:
  RNMBXImageSourceState() = default;

#ifdef ANDROID
  RNMBXImageSourceState(RNMBXImageSourceState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXLightState {
public:
  RNMBXLightState() = default;

#ifdef ANDROID
  RNMBXLightState(RNMBXLightState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXLineLayerState {
public:
  RNMBXLineLayerState() = default;

#ifdef ANDROID
  RNMBXLineLayerState(RNMBXLineLayerState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXMapViewState {
public:
  RNMBXMapViewState() = default;

#ifdef ANDROID
  RNMBXMapViewState(RNMBXMapViewState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXMarkerViewContentState {
public:
  RNMBXMarkerViewContentState() = default;

#ifdef ANDROID
  RNMBXMarkerViewContentState(RNMBXMarkerViewContentState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXMarkerViewState {
public:
  RNMBXMarkerViewState() = default;

#ifdef ANDROID
  RNMBXMarkerViewState(RNMBXMarkerViewState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXModelLayerState {
public:
  RNMBXModelLayerState() = default;

#ifdef ANDROID
  RNMBXModelLayerState(RNMBXModelLayerState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXModelsState {
public:
  RNMBXModelsState() = default;

#ifdef ANDROID
  RNMBXModelsState(RNMBXModelsState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXNativeUserLocationState {
public:
  RNMBXNativeUserLocationState() = default;

#ifdef ANDROID
  RNMBXNativeUserLocationState(RNMBXNativeUserLocationState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXPointAnnotationState {
public:
  RNMBXPointAnnotationState() = default;

#ifdef ANDROID
  RNMBXPointAnnotationState(RNMBXPointAnnotationState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXRasterDemSourceState {
public:
  RNMBXRasterDemSourceState() = default;

#ifdef ANDROID
  RNMBXRasterDemSourceState(RNMBXRasterDemSourceState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXRasterLayerState {
public:
  RNMBXRasterLayerState() = default;

#ifdef ANDROID
  RNMBXRasterLayerState(RNMBXRasterLayerState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXRasterSourceState {
public:
  RNMBXRasterSourceState() = default;

#ifdef ANDROID
  RNMBXRasterSourceState(RNMBXRasterSourceState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXShapeSourceState {
public:
  RNMBXShapeSourceState() = default;

#ifdef ANDROID
  RNMBXShapeSourceState(RNMBXShapeSourceState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXSkyLayerState {
public:
  RNMBXSkyLayerState() = default;

#ifdef ANDROID
  RNMBXSkyLayerState(RNMBXSkyLayerState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXStyleImportState {
public:
  RNMBXStyleImportState() = default;

#ifdef ANDROID
  RNMBXStyleImportState(RNMBXStyleImportState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXSymbolLayerState {
public:
  RNMBXSymbolLayerState() = default;

#ifdef ANDROID
  RNMBXSymbolLayerState(RNMBXSymbolLayerState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXTerrainState {
public:
  RNMBXTerrainState() = default;

#ifdef ANDROID
  RNMBXTerrainState(RNMBXTerrainState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXVectorSourceState {
public:
  RNMBXVectorSourceState() = default;

#ifdef ANDROID
  RNMBXVectorSourceState(RNMBXVectorSourceState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNMBXViewportState {
public:
  RNMBXViewportState() = default;

#ifdef ANDROID
  RNMBXViewportState(RNMBXViewportState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

} // namespace facebook::react